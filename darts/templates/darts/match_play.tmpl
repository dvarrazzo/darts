{% extends "darts/base.tmpl" %}

{% block header %}
{{ block.super }}
<script type="text/javascript" lang="javascript">
/*  Take care of drawing the dartboard */

function svgelement(name, attrs, content) {
  var svgns = "http://www.w3.org/2000/svg";
  var el = document.createElementNS(svgns, name);
  for (a in attrs) {
    el.setAttributeNS(null, a, attrs[a]);
  }
  if (content !== undefined) {
    el.appendChild(document.createTextNode(content));
  }
  return el;
}

Math.Tau = 2 * Math.PI;

function polar_to_rect(angle, radius) {
  return [Math.cos(angle) * radius, -Math.sin(angle) * radius];
};

function make_section(ir, or, index) {
  var slice = Math.Tau / 20;
  return {
    ir: ir,
    or: or,
    start: {
      inner: polar_to_rect((index - 0.5) * slice, ir),
      outer: polar_to_rect((index - 0.5) * slice, or),
    },
    end: {
      inner: polar_to_rect((index + 0.5) * slice, ir),
      outer: polar_to_rect((index + 0.5) * slice, or),
    },
    path: function () {
      var s = this;
      parts = [
        'M', s.start.inner[0], s.start.inner[1],
        'L', s.start.outer[0], s.start.outer[1],
        'A', s.or, s.or, 0, 0, 0, s.end.outer[0], s.end.outer[1],
        'L', s.end.inner[0], s.end.inner[1],
        'A', s.ir, s.ir, 0, 0, 1, s.start.inner[0], s.start.inner[1],
        'z'
      ];

      return parts.join(' ');
    }
  };
}

function text_location(index) {
  var slice = Math.Tau / 20;
  var frac_to_edge = 0.4;

  var r = frac_to_edge * ORS.edge + (1 - frac_to_edge) * ORS.dr;
  return polar_to_rect(index * slice, r);
}

var ring = 16;
ORS = { // outer radii
  be: 15, // bull's eye
  br: 30, // bull's ring
  inner: 107 - ring,
  tr: 107, // triple ring
  outer: 170 - ring,
  dr: 170, // dounbe ring
  edge: 226
};

$(function () {
  var cont = $('#dartboard').get(0);
  var s, x;

  // starts from 3 o'clock, counterclockwise
  var numbers = [6, 13, 4, 18, 1, 20, 5, 12, 9, 14, 11, 8, 16, 7, 19, 3, 17, 2, 15, 10];

  x = svgelement('circle', { cx: 0, cy: 0, r: ORS.edge, class: 'board' });
  cont.appendChild(x);

  x = svgelement('circle',
    { cx: 0, cy: 0, r: ORS.br, class: 'area ring', 'data-code': 'RING' });
  cont.appendChild(x);

  x = svgelement('circle',
    { cx: 0, cy: 0, r: ORS.be, class: 'area bull', 'data-code': 'BULL' });
  cont.appendChild(x);

  for (var i = 0; i < 20; i++) {
    var num = numbers[i];
    var parity = ((i % 2 == 0) ? 'even_slice' : 'odd_slice');
    var cl = parity + ' area n' + num;

    s = make_section(ORS.br, ORS.inner, i);
    x = svgelement('path',
      { class: cl, d: s.path(), 'data-code': '' + numbers[i] });
    cont.appendChild(x);

    s = make_section(ORS.inner, ORS.tr, i);
    x = svgelement('path',
      { class: cl + ' treble', d: s.path(), 'data-code': 'T' + numbers[i] });
    cont.appendChild(x);

    s = make_section(ORS.tr, ORS.outer, i);
    x = svgelement('path',
      { class: cl, d: s.path(), 'data-code': '' + numbers[i] });
    cont.appendChild(x);

    s = make_section(ORS.outer, ORS.dr, i);
    x = svgelement('path',
      { class: cl + ' double', d: s.path(), 'data-code': 'D' + numbers[i] });
    cont.appendChild(x);

    var tl = text_location(i);
    x = svgelement('text',
      { id: 'text_n' + num, 'class': 'scorenum', x: tl[0], y: tl[1], },
      num);
    cont.appendChild(x);
  }

  $('.dartboard .area').bind('click', function (e) {
    var el = $(e.target);
    var code = el.attr('data-code');
    // some jquery stuff doesn't work well with svg elements
    var dart = jQuery.Event('dart');
    dart.code = code;
    el.closest('.dartboard').trigger(dart);
  });

  $('table.score td.score').bind('click', function (e) {
    var dart = jQuery.Event('dart');
    dart.code = $(e.currentTarget).attr('data-code');
    $('svg.dartboard').trigger(dart);
  });
});
</script>


<script type="text/javascript">
  $(function () {
    $('.dartboard').bind('dart', function(e) {
      $.ajax({
        url: '{% url darts_match_throw game.match.id %}',
        type: 'POST',
        data: {
          csrfmiddlewaretoken: '{{csrf_token}}',
          throw_code: e.code },
        error: ajaxError,
        success: function (data) {
          // update the scores
          $('#players .current .leg_score').text(data.leg_score);
          $('#players .current .throw').each(function(i) {
            $(this).text(data.throws[i] ? data.throws[i].code : '-');
          });

          // write the comment
          if (data.bust) {
            writeComment('BUST!');
          } else if (data.leg_winner) {
            writeComment('WIN!', data.leg_winner);
          } else if (data.throws.length == 3) {
            writeComment(data.throws[0].score
                   + data.throws[1].score
                   + data.throws[2].score);
          }
          if (data.match_winner) {
            writeComment('MATCH WINNER!', data.match_winner);
          }

          // move the next action indicators
          $('#players .current .throw.current').removeClass('current');
          $('#players .current').removeClass('current');
          if (data.next_player) {
            $('#players .player[data-id=' + data.next_player + ']')
              .addClass('current');
            $($('#players .current .throw')[data.next_throw - 1])
              .addClass('current');
            if (data.next_throw == 1) {
              $('#players .current .throw').text('-');
            }
          }
          else {
            if (data.match_winner) {
              $('#new-match').show();
            } else {
              $('#next-leg').show();
            }
          }

          writeSuggestion();
        }
      });
    });

    writeSuggestion = function () {
      var sugg;
      var player_elem = $('#players .current');
      if (player_elem.length) {
        var score = parseInt(player_elem.children('.leg_score').text());
        var nthrows = 3 - player_elem.children('.throw').map(
          function (i) { if ($(this).hasClass('current')) return i; })[0];
        var max_score = 50 + 60 * (nthrows - 1);
        if (score <= max_score) {
          sugg = calcThrows(score, nthrows);
        }
      }

      $('#suggestion').text(sugg ? "To win: " + sugg.join(' + ') : '');
    };

    // good for the last throw
    var throws_last = [];
    for (var i = 20; i > 0; --i) { throws_last.push([i * 2, 'D' + i]); }
    throws_last.push([50, 'BULL']);

    // good for first and second throw
    var throws_other = [];
    for (var i = 20; i >= 14; --i) { throws_other.push([i * 3, 'T' + i]); }
    for (var i = 20; i >= 11; --i) { throws_other.push([i * 2, 'D' + i]); }
    for (var i = 20; i >=  0; --i) { throws_other.push([i,     ''  + i]); }
    throws_other.push([25, 'RING']);
    throws_other.push([50, 'BULL']);

    var calcThrows = function (score, nthrows, avail) {
      if (nthrows < 1) { return null; }
      if (!avail) { avail = throws_last; }
      for (var i = 0, ii = avail.length; i < ii; ++i) {
        var val = avail[i][0];
        if (val > score) { continue; }
        if (val == score) { return [ avail[i][1] ]; }
        var sol = calcThrows(score - val, nthrows - 1, throws_other);
        if (sol) {
          sol.push(avail[i][1]);
          return sol;
        }
      }
    };

    var writeComment = function (text, player_id) {
      var elem;
      if (!player_id) {
        elem = $('#players .current .comment');
      } else {
        elem = $('#players .player[data-id=' + player_id + '] .comment');
      }
      elem.text(text);
    };

    $('#undo').click(function () {
      $.ajax({
        url: '{% url darts_match_undo game.match.id %}',
        type: 'POST',
        data: { csrfmiddlewaretoken: '{{csrf_token}}' },
        error: ajaxError,
        success: function (data) {
          location.reload();
        }
      });
    });

    var ajaxError = function (xhr) {
      if (xhr.status == 400) {
        alert(xhr.responseText);
      }
      else {
        alert("error: " + xhr.statusText);
      }
    };

{% if game.match.winner_id %}
    $('#players .current').removeClass('current')
      .children('.throw.current').removeClass('current');
    writeComment('MATCH WINNER', {{ game.match.winner_id }});
    $('#new-match').show();
{% endif %}

    writeSuggestion();
  });
</script>
{% endblock header %}


{% block content %}

<svg xmlns="http://www.w3.org/2000/svg" width="451px" height="451px" style="float: left; margin-right: 2em;" class="dartboard">
  <defs>
    <style type="text/css"><![CDATA[
      text.scorenum {
        fill: white;
        font-size: 16pt;
        font-family: sans-serif;
        alignment-baseline: middle;
        text-anchor: middle;
      }
      .board {
        fill: black;
      }
      .area {
        stroke: black;
        stroke-width: 0.8;
      }
      .area:hover {
        fill: yellow !important;
      }
      .even_slice {
        fill: white;
      }
      .odd_slice {
        fill: black;
      }
      .odd_slice.double, .odd_slice.treble, .bull {
        fill: red;
      }
      .even_slice.double, .even_slice.treble, .ring {
        fill: green;
      }
    ]]></style>
  </defs>
  <g transform="translate(225.5, 225.5) scale(1)">
    <g id="dartboard">
    </g>
  </g>
</svg>

<table class="score">
    <tr>
  <td class="score" data-code="MISS">Miss</td>
  <td class="score" data-code="WALL">Wall</td>
  <td class="score" data-code="FALL">Fallen</td>
  <td class="score" data-code="FORE">Forefeit</td>
  </tr>
</table>
<p><a href='#' id="undo">Undo</a></p>

<table id="players">
  <tr>
    <th>Player</th>
    <th>Score</th>
    <th colspan="3">Last throws</th>
  </tr>
{% for p in game.get_players_and_leg_score %}
  <tr class="player {% ifequal p game.current_player %}current{% endifequal %}"
      data-id="{{p.id}}">
    <td class="player">
      <img class="avatar" src="{{p.avatar.url}}" />
      <span class="username">{{p.username}}</span>
    </td>
    <td class="leg_score">{{p.leg_score}}</td>
  {% for t in p.last_throws %}
    <td class="throw {% if t.current %}current{% endif %}">
      {{t.code|default:'-'}}
    </td>
  {% endfor %}
    <td class="comment"></td>
  </tr>
{% endfor %}
</table>

<p id="next-leg" style="display: none">
  <a href=".">Go to next leg</a>
</p>

<p id="new-match" style="display: none">
  <a href="{% url darts_match_create %}">Start a new match</a>
</p>

<p id="suggestion"></p>


{% endblock content %}


