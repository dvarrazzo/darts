{% extends "darts/base.tmpl" %}

{% block header %}
{{ block.super }}
<script type="text/javascript">
  $(function () {
    $('table.score td.score').click(function(e) {
      $.ajax({
        url: '{% url darts_match_throw game.match.id %}',
        type: 'POST',
        data: {
          csrfmiddlewaretoken: '{{csrf_token}}',
          throw_code: $(this).attr('data-code') },
        error: ajaxError, 
        success: function (data) {
          // update the scores
          $('#players .current .leg_score').text(data.leg_score);
          $('#players .current .throw').each(function(i) {
            $(this).text(data.throws[i] ? data.throws[i].code : '-');
          });

          // write the comment
          if (data.bust) {
            writeComment('BUST!');
          } else if (data.leg_winner) {
            writeComment('WIN!', data.leg_winner);
          } else if (data.throws.length == 3) {
            writeComment(data.throws[0].score
              + data.throws[1].score
              + data.throws[2].score);
          }
          if (data.match_winner) {
            writeComment('MATCH WINNER!', data.match_winner);
          }

          // move the next action indicators
          $('#players .current .throw.current').removeClass('current');
          $('#players .current').removeClass('current');
          if (data.next_player) {
            $('#players .player[data-id=' + data.next_player + ']')
              .addClass('current');
            $($('#players .current .throw')[data.next_throw - 1])
              .addClass('current');
            if (data.next_throw == 1) {
              $('#players .current .throw').text('-');
            }
          }
          else {
            if (data.match_winner) {
              $('#new-match').show();
            } else {
              $('#next-leg').show();
            }
          }

          writeSuggestion();
        }
      });
    });

    writeSuggestion = function () {
      var sugg;
      var player_elem = $('#players .current');
      if (player_elem.length) {
        var score = parseInt(player_elem.children('.leg_score').text());
        var nthrows = 3 - player_elem.children('.throw').map(
          function (i) { if ($(this).hasClass('current')) return i; })[0];
        var max_score = 50 + 60 * (nthrows - 1);
        if (score <= max_score) {
          sugg = calcThrows(score, nthrows);
        }
      }

      $('#suggestion').text(sugg ? "To win: " + sugg.join(' + ') : '');
    };

    // good for the last throw
    var throws_last = [];
    for (var i = 20; i > 0; --i) { throws_last.push([i * 2, 'D' + i]); }
    throws_last.push([50, 'BULL']);

    // good for first and second throw
    var throws_other = [];
    for (var i = 20; i >= 14; --i) { throws_other.push([i * 3, 'T' + i]); }
    for (var i = 20; i >= 11; --i) { throws_other.push([i * 2, 'D' + i]); }
    for (var i = 20; i >=  0; --i) { throws_other.push([i,     ''  + i]); }
    throws_other.push([25, 'RING']);
    throws_other.push([50, 'BULL']);

    var calcThrows = function (score, nthrows, avail) {
      if (nthrows < 1) { return null; }
      if (!avail) { avail = throws_last; }
      for (var i = 0, ii = avail.length; i < ii; ++i) {
        var val = avail[i][0];
        if (val > score) { continue; }
        if (val == score) { return [ avail[i][1] ]; }
        var sol = calcThrows(score - val, nthrows - 1, throws_other);
        if (sol) {
          sol.push(avail[i][1]);
          return sol;
        }
      }
    };

    var writeComment = function (text, player_id) {
      var elem;
      if (!player_id) {
        elem = $('#players .current .comment');
      } else {
        elem = $('#players .player[data-id=' + player_id + '] .comment');
      }
      elem.text(text);
    };

    $('#undo').click(function () {
      $.ajax({
        url: '{% url darts_match_undo game.match.id %}',
        type: 'POST',
        data: { csrfmiddlewaretoken: '{{csrf_token}}' },
        error: ajaxError,
        success: function (data) {
          location.reload();
        }
      });
    });

    var ajaxError = function (xhr) {
      if (xhr.status == 400) {
        alert(xhr.responseText);
      }
      else {
        alert("error: " + xhr.statusText);
      }
    };

{% if game.match.winner_id %}
    $('#players .current').removeClass('current')
      .children('.throw.current').removeClass('current');
    writeComment('MATCH WINNER', {{ game.match.winner_id }});
    $('#new-match').show();
{% endif %}

    writeSuggestion();
  });
</script>
{% endblock header %}


{% block content %}

<table id="players">
  <tr>
    <th>Player</th>
    <th>Score</th>
    <th colspan="3">Last throws</th>
  </tr>
{% for p in game.get_players_and_leg_score %}
  <tr class="player {% ifequal p game.current_player %}current{% endifequal %}"
      data-id="{{p.id}}">
    <td class="player">
      <img class="avatar" src="{{p.avatar.url}}" />
      <span class="username">{{p.username}}</span>
    </td>
    <td class="leg_score">{{p.leg_score}}</td>
  {% for t in p.last_throws %}
    <td class="throw {% if t.current %}current{% endif %}">
      {{t.code|default:'-'}}
    </td>
  {% endfor %}
    <td class="comment"></td>
  </tr>
{% endfor %}
</table>

<p id="next-leg" style="display: none">
  <a href=".">Go to next leg</a>
</p>

<p id="new-match" style="display: none">
  <a href="{% url darts_match_create %}">Start a new match</a>
</p>

<p id="suggestion"></p>

<p><a href='#' id="undo">Undo</a></p>

{% for table in game.score_tables %}
  <table class="score">
    {% for row in table %}
    <tr>
      {% for score in row %}
      <td class="score"
          data-code="{{score.code}}" data-value="{{score.value}}">
        {{score.label}}
      </td>
      {% endfor %}
    </tr>
    {% endfor %}
  </table>
{% endfor %}

{% endblock content %}


